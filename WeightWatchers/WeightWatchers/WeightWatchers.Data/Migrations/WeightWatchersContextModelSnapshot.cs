// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeightWatchers.Data;

namespace WeightWatchers.Data.Migrations
{
    [DbContext(typeof(WeightWatchersContext))]
    partial class WeightWatchersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeightWatchers.Services.Models.Card", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BMI")
                        .HasColumnType("real");

                    b.Property<float>("height")
                        .HasColumnType("real");

                    b.Property<DateTime>("openDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("subscriberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("subscriberId")
                        .IsUnique();

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("WeightWatchers.Services.Models.Subscriber", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("WeightWatchers.Services.Models.Card", b =>
                {
                    b.HasOne("WeightWatchers.Services.Models.Subscriber", "subscriber")
                        .WithOne("card")
                        .HasForeignKey("WeightWatchers.Services.Models.Card", "subscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
